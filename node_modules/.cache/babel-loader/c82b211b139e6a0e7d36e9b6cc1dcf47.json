{"ast":null,"code":"var _jsxFileName = \"/workspace/movie_clone/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Movie from './components/Movie';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(HashRouter, {\n    children: /*#__PURE__*/_jsxDEV(Route, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n/*\nclass App extends React.Component {\n    state = {\n        isLoading: true,\n        movies: [],\n    }\n    getMovies = async () => {\n        const {\n            data: {\n                data: { movies },\n            },\n        } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\n        this.setState({ movies: movies, isLoading: false });\n    }\n    componentDidMount() {\n        this.getMovies();\n    }\n\n    render() {\n        const { isLoading, movies } = this.state;\n        return(\n            <section className=\"container\">\n                {isLoading ? (\n                    <div className=\"loaser\">\n                        <span clasclassNames=\"loader__text\">Loading...</span>\n                    </div>\n                    ) : (\n                        <div className=\"movies\">\n                            {movies.map(movie => (\n                                <Movie\n                                    key={movie.id}\n                                    id={movie.id}\n                                    year={movie.year}\n                                    title={movie.title}\n                                    summary={movie.summary}\n                                    poster={movie.medium_cover_image}\n                                    genres={movie.genres}\n                                />\n                            ))}\n                        </div>\n                    )}\n            </section>\n        );\n    }\n}\n*/\n\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/workspace/movie_clone/src/App.js"],"names":["React","axios","Movie","HashRouter","Route","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,WAAP;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,kBAAlC;;;AAEA,SAASC,GAAT,GAAe;AACX,sBACI,QAAC,UAAD;AAAA,2BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KArDSA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Movie from './components/Movie';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\n\nfunction App() {\n    return (\n        <HashRouter>\n            <Route />\n        </HashRouter>\n    );\n}\n\n/*\nclass App extends React.Component {\n    state = {\n        isLoading: true,\n        movies: [],\n    }\n    getMovies = async () => {\n        const {\n            data: {\n                data: { movies },\n            },\n        } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\n        this.setState({ movies: movies, isLoading: false });\n    }\n    componentDidMount() {\n        this.getMovies();\n    }\n\n    render() {\n        const { isLoading, movies } = this.state;\n        return(\n            <section className=\"container\">\n                {isLoading ? (\n                    <div className=\"loaser\">\n                        <span clasclassNames=\"loader__text\">Loading...</span>\n                    </div>\n                    ) : (\n                        <div className=\"movies\">\n                            {movies.map(movie => (\n                                <Movie\n                                    key={movie.id}\n                                    id={movie.id}\n                                    year={movie.year}\n                                    title={movie.title}\n                                    summary={movie.summary}\n                                    poster={movie.medium_cover_image}\n                                    genres={movie.genres}\n                                />\n                            ))}\n                        </div>\n                    )}\n            </section>\n        );\n    }\n}\n*/\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}